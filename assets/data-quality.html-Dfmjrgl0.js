import{_ as t,c as a,b as o,o as i}from"./app-Bn9GZJrW.js";const n={};function r(s,e){return i(),a("div",null,e[0]||(e[0]=[o('<h1 id="data-quality-help-and-hints" tabindex="-1"><a class="header-anchor" href="#data-quality-help-and-hints"><span>Data Quality Help and Hints</span></a></h1><p><em>The nature of data, particularly aspects of quality (e.g. completeness, consistency, compliance) are directly related to whether or not it can be re-used (the R in <a href="https://en.wikipedia.org/wiki/FAIR_data" target="_blank" rel="noopener noreferrer">FAIR</a>). <strong>Quality</strong> is an abstract and rather subjective term, one difficult to pin down. <strong>Fidelity</strong>* may prove more a more tractable term. Conceptual and implemented means to improve data quality in and around TaxonWorks.</em></p><h2 id="motivation" tabindex="-1"><a class="header-anchor" href="#motivation"><span>Motivation</span></a></h2><p>This documentation originated via the co-organization of a workshop at <a href="https://digitaldata2024.sched.com/" target="_blank" rel="noopener noreferrer">Digital Data 8</a>, <strong>Data cleaning for maximum impact: Tools and workflows for data providers to efficiently find and fix data quality issues</strong>. Other co-organizers produced similar documentation resulting in a cross-platform page can be found at iDigBio: <a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024" target="_blank" rel="noopener noreferrer">Data Quality Toolkit 2024</a>. Each section below is linked to its corresponding topic on that iDigBio page.</p><h2 id="rationale-and-background" tabindex="-1"><a class="header-anchor" href="#rationale-and-background"><span>Rationale and Background</span></a></h2><p>Our TW philosopy on <em>data quality</em> or <em>fidelity</em> is multifaceted and can be thought of as the concepts of prevention, discovery, and resolution as applied to a spectrum of processes, from designing the data-models, to implementing validations, to creating tools and workflows facilitating discovery and visualization, to building user-interfaces that curators use to resolve issues, to reflecting feedback from external sources back into the system.</p><h3 id="prevention" tabindex="-1"><a class="header-anchor" href="#prevention"><span>Prevention</span></a></h3><p>Many of the issues highlighted below can be prevented at inception (when data are captured). At a low level this can happen during data-model design and implementation. For example in TaxonWorks we:</p><ul><li>Carefully model our domain (models) <a href=""></a> so that there is a solid basis for expanding the semantics of what we are capturing. This helps to prevent the addition of fields that seem useful at the time but that ultimately confuse our understanding of the data as the system evolves.</li><li>Isolating data fields from fields that facilitate TaxonWorks functionality. This separation of concerns ensures we can efficiently implement globally-relevant data-cleaning (e.g. stripping bad characters) and iterative checks on the data while not being confused by fields that don&#39;t require such.</li><li>Only permit data changes through a single API (TaxonWorks models), as opposed to updates directly to the database. This forces all validations to be checked when data enters the system, greatly improving data integrity.</li><li>Choosing either the database or the data-model as the location of data validation functions (not both, TaxonWorks validates in the model)</li><li>Creating (sometimes complex) tests that check that the validations implemented still hold, these are run on every single commit to the repository.</li><li>Using a <em>convention</em> to implement our data models and their relationships to one another (e.g. Rails ActiveRecord models)</li></ul><h3 id="discovery" tabindex="-1"><a class="header-anchor" href="#discovery"><span>Discovery</span></a></h3><p>In general, when, where, and how you find any data anomalies will vary, not only with respect to TaxonWorks but in working with data in general. For example, you might become aware of issues when:</p><ul><li>Mapping you data to an external standard, perhaps during migration to another database or share with an aggregator</li><li>Cleaning data up in a spreadsheet <em>before</em> upload to a workbench like TaxonWorks</li><li>Exploring your exported data with tools like OpenRefine, or via R, or via another API</li><li>Receiving feedback from another source (e. g. GBIF or iDigBio or ALA or OBIS or <a href="https://bionomia.net/" target="_blank" rel="noopener noreferrer">Bionomia</a>)</li><li>Hearing from someone on the internet sees something and contacts you</li><li>Perusing data already in your own database</li><li>Visualizing issues in day-to-day work, for example via the hundreds of notices possible in TaxonWorks on its &quot;soft validation&quot; framework.</li><li>Using your database <em>data visualization</em> tools to see <em>distinct values</em> in a given field (e. g. <code>Project vocabulary task</code> in TaxonWorks) or on a map.</li><li>Reviewing your software repository issue-tracker (e.g. <a href="https://github.com/SpeciesFileGroup/taxonworks/issues" target="_blank" rel="noopener noreferrer">gitHub for TaxonWorks</a>)</li><li>Learning about what others have done in similar systems (e.g. see <a href="https://github.com/tdwg/dwc-qa/tree/master/data" target="_blank" rel="noopener noreferrer">Distinct Values - Why This Data Directory?</a>)</li></ul><p>How data issues are discovered influences the options and methods for fixing them (e. g. one-by-one, bulk annotation, scripts).</p><h3 id="resolution" tabindex="-1"><a class="header-anchor" href="#resolution"><span>Resolution</span></a></h3><p>Example means to resolve the data are detailed in the specifics below. In addition to those one of the important ways to resolve problems is to use TaxonWorks models in scripts to batch process and fix data.</p><h3 id="acknowledgements" tabindex="-1"><a class="header-anchor" href="#acknowledgements"><span>Acknowledgements</span></a></h3><p>To <em>extend the value and scope of this work</em> we link to the work of the <a href="https://github.com/tdwg/bdq" target="_blank" rel="noopener noreferrer">Biodiversity Information Standards (TDWG) Biodiversity Data Quality Task Group (BDQ)</a>. We list the BDQ tests relevant to each issue, where they exist. With these connections, we hope to enhance the software developer&#39;s vision and work to connect to the BDQ tests to the workbench functionality around preventing, finding, and fixing these types of issues.</p><p>We gratefully acknowledge the efforts of this TDWG Task Group and the contributions and conversations with Paul Morris and Lee Belbin in figuring out how to do this. Special thanks to Paul Morris for work done to map the BDQ tests to the specific data quality issues highlighted in this workshop and on this page.</p><h3 id="structure" tabindex="-1"><a class="header-anchor" href="#structure"><span>Structure</span></a></h3><p>Issues below are grouped into the: <code>Identifiers</code> (e .g. catalog numbers), <code>Time</code> (e. g. dates), <code>Place</code> (aka geography, location), <code>Taxon</code>, and <code>Other</code> and <code>Tools and Resources</code>.</p><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>TaxonWorks only references many DarwinCore fields on export of the data, i.e. in the translation of its data model to an external format.</p></div><h2 id="identifiers" tabindex="-1"><a class="header-anchor" href="#identifiers"><span>Identifiers</span></a></h2><h3 id="catalognumbers" tabindex="-1"><a class="header-anchor" href="#catalognumbers"><span>CatalogNumbers</span></a></h3><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Duplicate Identifiers are prevented in the data model. This prevents errors in initial or subsequent (bulk OR one-by-one) uploads to TW. We use <code>Namespaces</code> and a simple Identifier ontology to ensure sets of Identifiers whose members are all unique.</p></div><p><code>catalogNumber</code> is only invoked as a column when exporting to Darwin Core format (it&#39;s not a specific field in a TaxonWorks model). When multiple objects are identified by the same <code>catalogNumber</code> we associate the corresponding Identifier to a virtual container. This lets us export a &quot;duplicate&quot; <code>catalogNumber</code> in the export for each occurrence record (which is uniquely identified by a UUID) while maintain specific data on individual specimens. <code>catalogNumbers</code> that appear identical in their rendering can be differentiated via different Namespaces if it can be determined that they were created via independent processes. Finally, you can extend any DarwinCore export with a custom data-attribute that might reference, say <code>dwc:otherCatalogNumbers</code>.</p><h2 id="time" tabindex="-1"><a class="header-anchor" href="#time"><span>Time</span></a></h2><h3 id="date-out-of-bounds" tabindex="-1"><a class="header-anchor" href="#date-out-of-bounds"><span>Date out-of-bounds</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Dates" target="_blank" rel="noopener noreferrer">idigbio-dqtk-time</a>, <a href="https://github.com/tdwg/bdq" target="_blank" rel="noopener noreferrer">TDWG BDQ</a> Relevant Tests: <a href="https://github.com/tdwg/bdq/issues/76" target="_blank" rel="noopener noreferrer">VALIDATION_DATEIDENTIFIED_INRANGE</a>, <a href="https://github.com/tdwg/bdq/issues/36" target="_blank" rel="noopener noreferrer">VALIDATION_EVENTDATE_INRANGE</a>, <a href="https://github.com/tdwg/bdq/issues/84" target="_blank" rel="noopener noreferrer">VALIDATION_YEAR_INRANGE</a>, <a href="https://github.com/tdwg/bdq/issues/64" target="_blank" rel="noopener noreferrer">VALIDATION_NAMEPUBLISHEDINYEAR_INRANGE</a>, <a href="https://github.com/tdwg/bdq/issues/67" target="_blank" rel="noopener noreferrer">VALIDATION_EVENT_CONSISTENT</a></p><p>In TaxonWorks, different types of records have dates associated, for example: the <code>event date</code> for a given <code>Collecting Event</code>, or the <code>date identified</code> (that is, <code>date determined</code>), or the <code>date georeferenced</code>. Dates out-of-expected bounds would include several kinds of impossible dates. That is, dates in the future or dates before the objects were actually ever collected or dates that are not possible with the birth and death dates for the person who collected/identified/observed/georeferenced/imaged the object/s. These could be grouped as</p><ul><li><strong>date hasn&#39;t happened yet</strong></li><li><strong>date is suspiciously old</strong> and</li><li><strong><em>flourit</em> date and event date not compatible.</strong></li></ul><h4 id="filter-collecting-event-by-date" tabindex="-1"><a class="header-anchor" href="#filter-collecting-event-by-date"><span>Filter Collecting Event by Date</span></a></h4><p><strong>Find</strong> outlier dates using the <code>Filter Collecting Event</code> task, the <code>Filter Collection Object</code> task, and you can use the <code>Project Vocabulary</code> task to peak inside each field in your database to see distinct values and the records with those values.</p><figure><img src="https://sfg.taxonworks.org/s/xcmcsl" alt="" title="the Filter Collecting Event task user interface showing where to enter start and end dates to filter with"><figcaption class="figure-left">Using the <strong>date range</strong> method to find outlier dates with the <code>Filter Collecting Event</code> task</figcaption></figure><ul><li>Navigate to the <code>Filter Collecting Event</code> task</li><li>Scroll down to the <code>Collecting Event</code> filter section</li><li>Enter date range to search <ul><li>e. g. to check for future out-of-bounds dates try putting &quot;tomorrow&#39;s&quot; date in for the <code>start date</code> and some date way into the future for the <code>End date</code></li></ul></li><li>Click <code>Filter</code> to see resulting records.</li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Note you can click any column to sort on that column (which sorts only for the records showing on that page). This makes it simpler to see outliers in a date-related column. These sets can also be downloaded as CSV files if need be.</p></div><p><strong>Find</strong> outlier dates using the <code>Project Vocabulary</code> task. With this task, one can see the unique values present for a given field and how many times that string/value occurs. You <code>click</code> on one of the results of the output and see the associated records having that value. For the <strong>out-of-expected-bounds-date</strong> use case, one could see odd unexpected dates easily.</p><p><strong>Find</strong> outlier dates based on someone&#39;s lifespan, when known. In the future, you can expect that if you have the active years for a given person entered into the database, and that person is linked to a record where the date collected or identified is not within their active years, you will be able to find these records.</p><p><strong>Fix</strong> the outlier dates found from the above <code>Filter Collecting Event</code> task search.</p><ul><li>In the result set, you can navigate to a single record and edit that one</li><li>You can use the <strong>download csv</strong> version of the results if you have a lot of records and want to sort by year in a spreadsheet to see the extent of the year bounds. <ul><li>You can sort by year by clicking on a given column, however, it is only sorting the records on that page (note the number of records per/page can be increased).</li></ul></li></ul><h3 id="eventdate-and-year-month-day" tabindex="-1"><a class="header-anchor" href="#eventdate-and-year-month-day"><span>eventDate and year month day</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Year,_Month,_and_Day_Values_Do_Not_Match_Date" target="_blank" rel="noopener noreferrer">idigbio-dqtk-date-ymd</a>, <a href="https://github.com/tdwg/bdq" target="_blank" rel="noopener noreferrer">TDWG BDQ</a> Relevant Tests: <a href="https://github.com/tdwg/bdq/issues/67" target="_blank" rel="noopener noreferrer">VALIDATION_EVENT_CONSISTENT</a></p><p>In TaxonWorks these align automatically.</p><ul><li>If using the <code>DwC Occurrence Importer</code> and you provide the <code>eventDate</code> (in YYYY-MM-DD format) and you provide the dwc:day, dwc:month, and dwc:year, the importer software checks for consistency.</li><li>If using the <code>DwC Occurrence Importer</code> and you provide the <code>eventDate</code> (in YYYY-MM-DD format) only, we derive the dwc:day, dwc:month, and dwc:year on import.</li><li>After upload, the <code>year</code>, <code>month</code>, and <code>day</code> fields can be edited, there is no single <code>eventDate</code> field which prevents these from potentially getting out of sync.</li></ul><h2 id="place" tabindex="-1"><a class="header-anchor" href="#place"><span>Place</span></a></h2><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Geography" target="_blank" rel="noopener noreferrer">idigbio-dqtk-place</a></p><h3 id="coordinates-zero" tabindex="-1"><a class="header-anchor" href="#coordinates-zero"><span>Coordinates Zero</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Coordinates_are_Zero" target="_blank" rel="noopener noreferrer">idigbio-dqtk-zero</a>, <a href="https://github.com/tdwg/bdq" target="_blank" rel="noopener noreferrer">TDWG BDQ</a> Relevant Tests: <a href="https://github.com/tdwg/bdq/issues/87" target="_blank" rel="noopener noreferrer">VALIDATION_COORDINATES_NOTZERO</a>, <a href="https://github.com/tdwg/bdq/issues/287" target="_blank" rel="noopener noreferrer">ISSUE_COORDINATES_CENTEROFCOUNTRY</a></p><p>In TW this will depend. 0, 0 are of course &quot;Valid&quot; however they have to match other data in the record.</p><p><strong>Find</strong> 0, 0 coordinates uing the <code>Project vocabulary</code> task</p><ul><li>Select model: <code>Collecting Event</code></li><li>Select attribute: <code>verbatim_longitude</code> (or <code>verbatim_latitude</code>)</li><li>in <code>Beginning with</code> put: 0.0 (for example)</li><li>Click on <code>Show records</code></li><li>Result is a set of records in <code>Filter collecting events</code><ul><li>You will have a set of records that have the properties you provided that you can work on editing.</li><li>You can edit one record at a time or potentially edit many at once depending on what needs to be updated.</li></ul></li></ul><p><strong>Fix</strong> unexpected coordinates It may be possible to fix more than one record at a time depending on the specific issue.</p><ul><li>In your resulting set, Select a record to fix,</li><li>Then click the <code>navigator</code> icon for that record and</li><li>Click <code>Edit</code> in the options provided.</li></ul><p>If there are many to fix:</p><ul><li>Select all for that page, or some subset of records</li><li>Then click on the <code>radial collecting event</code> icon</li><li>In the <code>radial collecting event</code> radial pop-up, select one of these options <ul><li>Set <code>Collection Date/Time</code></li><li>Set <code>verbatim fields</code></li></ul></li></ul><h3 id="coordinates-do-not-fall-within-named-geographic-unit" tabindex="-1"><a class="header-anchor" href="#coordinates-do-not-fall-within-named-geographic-unit"><span>Coordinates Do Not Fall Within Named Geographic Unit</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Coordinates_Do_Not_Fall_Within_Named_Geographic_Unit" target="_blank" rel="noopener noreferrer">idigbio-dqtk-geo-unit</a>, <a href="https://github.com/tdwg/bdq" target="_blank" rel="noopener noreferrer">TDWG BDQ</a> Relevant Tests: <a href="https://github.com/tdwg/bdq/issues/56" target="_blank" rel="noopener noreferrer">VALIDATION_COORDINATES-STATEPROVINCE_CONSISTENT</a>, <a href="https://github.com/tdwg/bdq/issues/50" target="_blank" rel="noopener noreferrer">VALIDATION_COORDINATES_COUNTRYCODE_CONSISTENT</a></p><p>If you provide coordinates on upload, we compute the geographic units based on the gazetteer information. So we don&#39;t have this issue specifically. You can potentially see outliers using the following method.</p><p><strong>Find and Fix</strong></p><ul><li>Go to <code>Filter collecting events</code></li><li>Search for the area of interest, (e. g. United States and pick <code>Descendants</code>)</li><li>Click <code>Filter</code></li><li>In the resulting set, in the <strong>left</strong> sidebar, click the <code>linker</code> icon to get the <code>Radial linker</code><ul><li>Select <code>Spatial Summary</code> which gives you a <strong>scatter plot</strong> where the x-axis is longitude, the y-axis is latitude</li><li>If there are longitudes with positive (or other outlier non-expected) values, you will be able to see them and go to those records to debug.</li></ul></li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Using the <code>Collecting Event</code> software, if you provide spatial constraint (choose a <code>GeographicArea with shape</code>) and try and provide a point outside that, you are not allowed to. We note at the same time, you can put whatever conflicting info you want in verbatim_ fields, these are not validated.</p></div><h3 id="georeference-metadata-with-no-associated-georeference" tabindex="-1"><a class="header-anchor" href="#georeference-metadata-with-no-associated-georeference"><span>Georeference Metadata with no Associated Georeference</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Georeference_Metadata_with_no_Associated_Georeference" target="_blank" rel="noopener noreferrer">idigbio-dqtk-metadata-no-georef</a></p><p>Not possible on export (though the inverse is).</p><h3 id="elevation-unlikely" tabindex="-1"><a class="header-anchor" href="#elevation-unlikely"><span>Elevation Unlikely</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Elevation_is_Unlikely" target="_blank" rel="noopener noreferrer">idigbio-dqtk-elevation-questionable</a>, <a href="https://github.com/tdwg/bdq" target="_blank" rel="noopener noreferrer">TDWG BDQ</a> Relevant Tests: <a href="https://github.com/tdwg/bdq/issues/112" target="_blank" rel="noopener noreferrer">VALIDATION_MAXELEVATION_INRANGE</a>, <a href="https://github.com/tdwg/bdq/issues/39" target="_blank" rel="noopener noreferrer">VALIDATION_MINELEVATION_INRANGE</a>, see also <a href="https://github.com/tdwg/bdq/issues/107" target="_blank" rel="noopener noreferrer">VALIDATION_MINDEPTH_INRANGE</a>, <a href="https://github.com/tdwg/bdq/issues/187" target="_blank" rel="noopener noreferrer">VALIDATION_MAXDEPTH_INRANGE</a></p><p>To look for unlikely or unexpected elevations, one way would be to use the <code>Project vocabulary</code> task.</p><p><strong>Find and Fix</strong> elevation value ranges uing the <code>Project vocabulary</code> task:</p><ul><li>Select model: <code>Collecting Event</code></li><li>Select attribute: <code>maximum_elevation</code> (or <code>minimum_elevation</code>)</li><li>Click on <code>Show records</code></li><li>in the <strong>left</strong> sidebar, click <code>Term</code> to sort column to see the value range for max (or min, depending on what you picked)</li><li>Click on the row with any unexpected value to see the records with that value (or click that value in the word cloud).</li><li>Result is a set of records in <code>Filter collecting events</code><ul><li>You will have a set of records that have the properties you provided that you can work on editing.</li><li>You can edit one record at a time or potentially edit many at once depending on what needs to be updated.</li></ul></li></ul><h3 id="improperly-negated-latitudes-longitudes" tabindex="-1"><a class="header-anchor" href="#improperly-negated-latitudes-longitudes"><span>Improperly Negated Latitudes Longitudes</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Improperly_Negated_Latitudes/Longitudes" target="_blank" rel="noopener noreferrer">idigbio-dqtk-lat-lon-neg</a>, <a href="https://github.com/tdwg/bdq" target="_blank" rel="noopener noreferrer">TDWG BDQ</a> Relevant Tests: <a href="https://github.com/tdwg/bdq/issues/54" target="_blank" rel="noopener noreferrer">AMENDMENT_COORDINATES_TRANSPOSED</a>, <a href="https://github.com/tdwg/bdq/issues/51" target="_blank" rel="noopener noreferrer">VALIDATION_COORDINATES_TERRESTRIALMARINE</a></p><p><strong>Find and Fix</strong></p><ul><li>Go to <code>Filter collecting events</code></li><li>Search for the area of interest, (e. g. United States and pick <code>Descendants</code>)</li><li>Click <code>Filter</code></li><li>In the resulting set, in the <strong>left</strong> sidebar, click the <code>linker</code> icon to get the <code>Radial linker</code><ul><li>Select <code>Spatial Summary</code> which gives you a <strong>scatter plot</strong> where the x-axis is longitude, the y-axis is latitude</li><li>IF there are longitudes with positive values, you will be able to see them and go to those records to debug.</li></ul></li></ul><h3 id="invalid-coordinates" tabindex="-1"><a class="header-anchor" href="#invalid-coordinates"><span>Invalid Coordinates</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Invalid_Coordinates" target="_blank" rel="noopener noreferrer">idigbio-dqtk-invalid-coord</a>, <a href="https://github.com/tdwg/bdq" target="_blank" rel="noopener noreferrer">TDWG BDQ</a> Relevant Tests: <a href="https://github.com/tdwg/bdq/issues/79" target="_blank" rel="noopener noreferrer">VALIDATION_DECIMALLATITUDE_INRANGE</a>, <a href="https://github.com/tdwg/bdq/issues/30" target="_blank" rel="noopener noreferrer">VALIDATION_DECIMALLONGITUDE_INRANGE</a></p><p>Coordinates are exported as Geo referenced, i.e. they can not be illegal values. They can of course be based on points placed in error. Errors are minimized due to cross-referencing to geo-spatial gazetteers ensuring that the points dropped are within 10km of the place selected.</p><h3 id="lower-geography-values-provided-but-no-higher-geography" tabindex="-1"><a class="header-anchor" href="#lower-geography-values-provided-but-no-higher-geography"><span>Lower Geography Values Provided, but No Higher Geography</span></a></h3><p>Selecting any <code>GeographicArea</code> happens in one place in TaxonWorks, so you automatically get spatial and parent validation going up.* In other words, if you provide the lower geography, we derive the higher geography where there is information in our gazetteers to do so.</p><h3 id="minimum-and-maximum-elevation-values-mismatched" tabindex="-1"><a class="header-anchor" href="#minimum-and-maximum-elevation-values-mismatched"><span>Minimum and Maximum Elevation Values Mismatched</span></a></h3><p>Our Validation software catches this for any parsed values. You can of course put what you like in verbatim fields.</p><h3 id="mismatched-country-and-countrycode-values" tabindex="-1"><a class="header-anchor" href="#mismatched-country-and-countrycode-values"><span>Mismatched Country and CountryCode Values</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Mismatched_Country_and_CountryCode_Values" target="_blank" rel="noopener noreferrer">idigbio-dqtk-mismatch-codes</a>, <a href="https://github.com/tdwg/bdq" target="_blank" rel="noopener noreferrer">TDWG BDQ</a> Relevant Tests: <a href="https://github.com/tdwg/bdq/issues/62" target="_blank" rel="noopener noreferrer">VALIDATION_COUNTRY_COUNTRYCODE_CONSISTENT</a></p><p>If a <code>country</code> is reported and we have access to a corresponding ISO code (true for a majority of cases), then they are always matched, i.e. they are derived from a unified source, not manually entered independently.</p><h3 id="mismatched-geographic-terms" tabindex="-1"><a class="header-anchor" href="#mismatched-geographic-terms"><span>Mismatched Geographic Terms</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Mismatched_Geographic_Terms" target="_blank" rel="noopener noreferrer">idigbio-dqtk-mismatch-terms</a></p><p>TaxonWorks makes use of an internally managed GeographicArea gazeteer. Selecting a finer resolution entity (e.g. county, state) permits us to crawl the parenthood to fill in the pertinent data.</p><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>TaxonWorks also does spatial lookup for Georeference point data. The lookup algorithm can error based on limits to the resolution of the referenced gazeteers. In this case one cap prioritize the use of GeographicArea to over-ride the spatial lookup.</p></div><h3 id="missing-geodetic-datum" tabindex="-1"><a class="header-anchor" href="#missing-geodetic-datum"><span>Missing Geodetic Datum</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Missing_Geodetic_Datum" target="_blank" rel="noopener noreferrer">idigbio-dqtk-datum-missing</a>, <a href="https://github.com/tdwg/bdq" target="_blank" rel="noopener noreferrer">TDWG BDQ</a> Relevant Tests: <a href="https://github.com/tdwg/bdq/issues/78" target="_blank" rel="noopener noreferrer">VALIDATION_GEODETICDATUM_NOTEMPTY</a>, see also <a href="https://github.com/tdwg/bdq/issues/59" target="_blank" rel="noopener noreferrer">VALIDATION_GEODETICDATUM_STANDARD</a> expects an EPSG code, <a href="https://github.com/tdwg/bdq/issues/60" target="_blank" rel="noopener noreferrer">AMENDMENT_GEODETICDATUM_STANDARDIZED</a> sets to an EPSG code, <a href="https://github.com/tdwg/bdq/issues/102" target="_blank" rel="noopener noreferrer">AMENDMENT_GEODETICDATUM_ASSUMEDDEFAULT</a></p><p>Missing data here are the norm for historical data. For de-novo capture TaxonWorks exports a number of types as estimated from the processes by which the Georeference was captured or an explicity Protocol reference.</p><h3 id="missing-latitudes-longitudes" tabindex="-1"><a class="header-anchor" href="#missing-latitudes-longitudes"><span>Missing Latitudes Longitudes</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Missing_Latitudes/Longitudes" target="_blank" rel="noopener noreferrer">idigbio-dqtk-lat-lon-missing</a>, <a href="https://github.com/tdwg/bdq" target="_blank" rel="noopener noreferrer">TDWG BDQ</a> Relevant Tests: <a href="https://github.com/tdwg/bdq/issues/119" target="_blank" rel="noopener noreferrer">VALIDATION_DECIMALLATITUDE_NOTEMPTY</a>, <a href="https://github.com/tdwg/bdq/issues/96" target="_blank" rel="noopener noreferrer">VALIDATION_DECIMALLONGITUDE_NOTEMPTY</a></p><p>Using the <code>Filter collecting event</code> task, you can find records with no Georeference.</p><h3 id="misspelled-geographic-unit-names" tabindex="-1"><a class="header-anchor" href="#misspelled-geographic-unit-names"><span>Misspelled Geographic Unit Names</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Misspelled_Geographic_Unit_Names" target="_blank" rel="noopener noreferrer">idigbio-dqtk-geounit-names-spelling</a>, <a href="https://github.com/tdwg/bdq" target="_blank" rel="noopener noreferrer">TDWG BDQ</a> Relevant Tests: <a href="https://github.com/tdwg/bdq/issues/21" target="_blank" rel="noopener noreferrer">VALIDATION_COUNTRY_FOUND</a>, <a href="https://github.com/tdwg/bdq/issues/199" target="_blank" rel="noopener noreferrer">VALIDATION_STATEPROVINCE_FOUND</a></p><p>Users do not enter geographic names (unless the customize to export ADM level fields), they are selected from a controlled list of over 40k GeographicAreas. Errors are possible when source gazeteers included the error. We correct these at the installation level as found. TaxonWorks also has a generic set of annotations under the umbrella of AlternateValues. This lets us link entities to alternate spellings, translations and abbreviations.</p><h2 id="taxon" tabindex="-1"><a class="header-anchor" href="#taxon"><span>Taxon</span></a></h2><h3 id="misspelled-or-invalid-taxonomic-names" tabindex="-1"><a class="header-anchor" href="#misspelled-or-invalid-taxonomic-names"><span>Misspelled or Invalid Taxonomic Names</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Misspelled_or_Invalid_Taxonomic_Names" target="_blank" rel="noopener noreferrer">idigbio-dqtk-taxonname-missing-invalid</a>, <a href="https://github.com/tdwg/bdq" target="_blank" rel="noopener noreferrer">TDWG BDQ</a> Relevant Tests: <a href="https://github.com/tdwg/bdq/issues/46" target="_blank" rel="noopener noreferrer">VALIDATION_SCIENTIFICNAME_FOUND</a></p><p>A huge variety of nomenclatural nuances can be specifically classified and identified in TaxonWorks, synonymous and misspelled names included. All of these represent the historical record. TaxonDeterminations are linked to these names and a CollectionObject as a bridging step. Presenting synomous or misspelled names during export is not only possible but required in various cases (for example for nomenclatural catalogs).</p><h3 id="unknown-higher-taxonomy" tabindex="-1"><a class="header-anchor" href="#unknown-higher-taxonomy"><span>Unknown Higher Taxonomy</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Unknown_Higher_Taxonomy" target="_blank" rel="noopener noreferrer">idigbio-dqtk-higher-tax-unknown</a>, <a href="https://github.com/tdwg/bdq" target="_blank" rel="noopener noreferrer">TDWG BDQ</a> Relevant Tests: <a href="https://github.com/tdwg/bdq/issues/81" target="_blank" rel="noopener noreferrer">VALIDATION_KINGDOM_FOUND</a>, <a href="https://github.com/tdwg/bdq/issues/22" target="_blank" rel="noopener noreferrer">VALIDATION_PHYLUM_FOUND</a>, <a href="ttps://github.com/tdwg/bdq/issues/77" target="_blank" rel="noopener noreferrer">VALIDATION_CLASS_FOUND</a>, <a href="ttps://github.com/tdwg/bdq/issues/83" target="_blank" rel="noopener noreferrer">VALIDATION_ORDER_FOUND</a>, <a href="ttps://github.com/tdwg/bdq/issues/205" target="_blank" rel="noopener noreferrer">VALIDATION_SUPERFAMILY_FOUND</a> supplemental, <a href="ttps://github.com/tdwg/bdq/issues/28" target="_blank" rel="noopener noreferrer">VALIDATION_FAMILY_FOUND</a>, <a href="ttps://github.com/tdwg/bdq/issues/207" target="_blank" rel="noopener noreferrer">VALIDATION_TRIBE_FOUND</a> supplemental, <a href="ttps://github.com/tdwg/bdq/issues/208" target="_blank" rel="noopener noreferrer">VALIDATION_SUBTRIBE_FOUND</a> supplemental, <a href="ttps://github.com/tdwg/bdq/issues/122" target="_blank" rel="noopener noreferrer">VALIDATION_GENUS_FOUND</a>, <a href="ttps://github.com/tdwg/bdq/issues/70" target="_blank" rel="noopener noreferrer">VALIDATION_TAXON_UNAMBIGUOUS</a>, <a href="ttps://github.com/tdwg/bdq/issues/123" target="_blank" rel="noopener noreferrer">VALIDATION_CLASSIFICATION_CONSISTENT</a></p><p>Unknown higher taxonomy is highly specific to the purpose of use of the data. There is no one true classification of nomenclature, or taxa. Syncronizing of TaxonWorks data to external taxonomies is best done via the processes that merge or take TaxonWorks data into a new system.</p><h2 id="other" tabindex="-1"><a class="header-anchor" href="#other"><span>Other</span></a></h2><h3 id="incorrect-character-encodings" tabindex="-1"><a class="header-anchor" href="#incorrect-character-encodings"><span>Incorrect Character Encodings</span></a></h3><p>All data are encoded as UTF-8. TaxonWorks pre-processes all strings before writing (persisting) them to remove a handful of well-known issues with encoding, for example trimming white-space and removing various invisible characters.</p><h3 id="incorrect-line-endings" tabindex="-1"><a class="header-anchor" href="#incorrect-line-endings"><span>Incorrect Line Endings</span></a></h3><p>Many different exports are possible in TaxonWorks. Exporting returns a unified format.</p><h3 id="invalid-individual-count" tabindex="-1"><a class="header-anchor" href="#invalid-individual-count"><span>Invalid Individual Count</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Invalid_Individual_Count" target="_blank" rel="noopener noreferrer">idigbio-dqtk-invalid-count</a>, <a href="https://github.com/tdwg/bdq" target="_blank" rel="noopener noreferrer">TDWG BDQ</a> Relevant Tests: <a href="https://github.com/tdwg/bdq/issues/290" target="_blank" rel="noopener noreferrer">VALIDATION_INDIVIDUALCOUNT_INTEGER</a></p><p>The CollectionObject model requires a positive integer as the <code>total</code>, invalid values are impossible.</p><h3 id="nonstandardized-basisofrecord-values" tabindex="-1"><a class="header-anchor" href="#nonstandardized-basisofrecord-values"><span>Nonstandardized basisOfRecord Values</span></a></h3><p><a href="https://www.idigbio.org/wiki/index.php/Data_Quality_Toolkit_2024#Non-standardized_BasisOfRecord_Values" target="_blank" rel="noopener noreferrer">idigbio-dqtk-nonstand-basesOfRecord</a>, <a href="https://github.com/tdwg/bdq" target="_blank" rel="noopener noreferrer">TDWG BDQ</a> Relevant Tests: <a href="https://github.com/tdwg/bdq/issues/104" target="_blank" rel="noopener noreferrer">VALIDATION_BASISOFRECORD_STANDARD</a>, <a href="https://github.com/tdwg/bdq/issues/63" target="_blank" rel="noopener noreferrer">AMENDMENT_BASISOFRECORD_STANDARDIZED</a></p><p>We generate <code>dwc:basisOfRecord</code>, so a non-issue for TW. If an issue on Import, our Importer software will tell you. With the Importer you can &quot;find&quot; and &quot;replace&quot; any non-standard value and then continue the upload.</p><h2 id="external-tools-and-resources" tabindex="-1"><a class="header-anchor" href="#external-tools-and-resources"><span>External Tools and Resources</span></a></h2><p>Many approaches have influenced how we build and what we build in TaxonWorks with respect to data-quality:</p><ul><li>Data Carpentry <a href="https://datacarpentry.org/OpenRefine-ecology-lesson/" target="_blank" rel="noopener noreferrer">Data Cleaning with OpenRefine</a></li><li>Data Carpentry <a href="https://datacarpentry.org/spreadsheet-ecology-lesson/" target="_blank" rel="noopener noreferrer">Data Organization in Spreadsheets</a></li><li><a href="https://openrefine.org/" target="_blank" rel="noopener noreferrer">OpenRefine</a> as a great tool for <ul><li>cleaning and structuring messy data</li><li>extending and enhancing your data</li><li>tracking and sharing your data cleaning steps automatically</li></ul></li><li><a href="https://voyant-tools.org/" target="_blank" rel="noopener noreferrer">Voyant Tools</a> for visualizing and exploring text data</li><li>ChatGPT proves useful in some instances too (e. g. for finding less common datums)</li><li><a href="https://www.datafix.com.au/cookbook/" target="_blank" rel="noopener noreferrer">Bob Mesibov’s Data Cleaner’s Cookbook</a></li><li><a href="https://data-blog.gbif.org/post/issues-and-flags/" target="_blank" rel="noopener noreferrer">GBIF’s data quality flags</a> NOTE: in TaxonWorks, we pull GBIF DQ data back for you into the user-interface so you can evaluate the feedback without leaving TaxonWorks.</li><li><a href="https://github.com/iDigBio/idigbio-search-api/wiki/Data-Quality-Flags" target="_blank" rel="noopener noreferrer">iDigBio’s data quality flags</a></li><li><a href="https://manual.obis.org/index.html" target="_blank" rel="noopener noreferrer">OBIS Manual</a> (e. g. their Data Laundry help and community) See also Gan Y-M, Perez Perez R, Provoost P, Benson A, Peralta Brichtova AC, Lawrence E, Nicholls J, Konjarla J, Sarafidou G, Saeedi H, Lear D, Penzlin A, Wambiji N, Appeltans W (2023) Promoting High-Quality Data in OBIS: Insights from the OBIS Data Quality Assessment and Enhancement Project Team . Biodiversity Information Science and Standards 7: e112018. https://doi.org/10.3897/biss.7.112018</li><li><a href="https://en.wikipedia.org/wiki/Lint_(software)" target="_blank" rel="noopener noreferrer">Linter tools</a> offer another way to evaluate and tidy up your data. For example, you have a BibTeX file (from EndNote, Zotero, or elsewhere) that seems to have errors. You can use online tools that help you find and fix formatting (syntax) errors. <ul><li>See <a href="https://flamingtempura.github.io/bibtex-tidy/index.html" target="_blank" rel="noopener noreferrer">BibTeX Tidy</a> as an example.</li></ul></li><li>Need to create or convert data into other formats? Some tools that help you with this part of any data transformation processes include: <ul><li><a href="https://www.tablesgenerator.com/" target="_blank" rel="noopener noreferrer">Tables Generator</a> (e. g. HTML, LaTeX, MediaWiki, Markdown)</li><li><a href="https://pandoc.org/" target="_blank" rel="noopener noreferrer">PanDoc - a universal document converter</a></li></ul></li><li>Authority Files for comparing your data with known sources <ul><li><a href="https://globalnames.org/" target="_blank" rel="noopener noreferrer">Global Names Architecture Tools (GNA) Suite</a> helps you <ul><li><strong>find</strong> taxon names in documents or on websites</li><li><strong>parse</strong> taxon name strings into their parts (e. g. genus, specific epithet, author, year)</li><li><strong>verify</strong> taxon names against known sources</li><li><strong>verify</strong> from inside OpenRefine using the Global Names <a href="https://github.com/gnames/gnverifier/wiki/OpenRefine-readme" target="_blank" rel="noopener noreferrer"><em>Reconciliation Service</em></a>.</li><li><a href="https://github.com/gnames/gndiff" target="_blank" rel="noopener noreferrer"><strong>compare</strong> two files that contain taxon name strings</a></li></ul></li></ul></li></ul><h3 id="footnotes" tabindex="-1"><a class="header-anchor" href="#footnotes"><span>Footnotes</span></a></h3><ul><li><strong>Fidelity</strong> - as referenced by Erica Krimmel at <a href="https://together.taxonworks.org" target="_blank" rel="noopener noreferrer">TaxonWorks Together</a> 2024 as a term that may more exactly convey what we can manage when we talk about making our data as fit-for-purposes (known and imagined) as possible (rather than the more <em>subjective</em> term of <em>quality</em>).</li></ul>',118)]))}const d=t(n,[["render",r],["__file","data-quality.html.vue"]]),h=JSON.parse('{"path":"/guide/data-quality.html","title":"Data Quality Help and Hints","lang":"en-US","frontmatter":{"sidebarPosition":55},"headers":[{"level":2,"title":"Motivation","slug":"motivation","link":"#motivation","children":[]},{"level":2,"title":"Rationale and Background","slug":"rationale-and-background","link":"#rationale-and-background","children":[{"level":3,"title":"Prevention","slug":"prevention","link":"#prevention","children":[]},{"level":3,"title":"Discovery","slug":"discovery","link":"#discovery","children":[]},{"level":3,"title":"Resolution","slug":"resolution","link":"#resolution","children":[]},{"level":3,"title":"Acknowledgements","slug":"acknowledgements","link":"#acknowledgements","children":[]},{"level":3,"title":"Structure","slug":"structure","link":"#structure","children":[]}]},{"level":2,"title":"Identifiers","slug":"identifiers","link":"#identifiers","children":[{"level":3,"title":"CatalogNumbers","slug":"catalognumbers","link":"#catalognumbers","children":[]}]},{"level":2,"title":"Time","slug":"time","link":"#time","children":[{"level":3,"title":"Date out-of-bounds","slug":"date-out-of-bounds","link":"#date-out-of-bounds","children":[{"level":4,"title":"Filter Collecting Event by Date","slug":"filter-collecting-event-by-date","link":"#filter-collecting-event-by-date","children":[]}]},{"level":3,"title":"eventDate and year month day","slug":"eventdate-and-year-month-day","link":"#eventdate-and-year-month-day","children":[]}]},{"level":2,"title":"Place","slug":"place","link":"#place","children":[{"level":3,"title":"Coordinates Zero","slug":"coordinates-zero","link":"#coordinates-zero","children":[]},{"level":3,"title":"Coordinates Do Not Fall Within Named Geographic Unit","slug":"coordinates-do-not-fall-within-named-geographic-unit","link":"#coordinates-do-not-fall-within-named-geographic-unit","children":[]},{"level":3,"title":"Georeference Metadata with no Associated Georeference","slug":"georeference-metadata-with-no-associated-georeference","link":"#georeference-metadata-with-no-associated-georeference","children":[]},{"level":3,"title":"Elevation Unlikely","slug":"elevation-unlikely","link":"#elevation-unlikely","children":[]},{"level":3,"title":"Improperly Negated Latitudes Longitudes","slug":"improperly-negated-latitudes-longitudes","link":"#improperly-negated-latitudes-longitudes","children":[]},{"level":3,"title":"Invalid Coordinates","slug":"invalid-coordinates","link":"#invalid-coordinates","children":[]},{"level":3,"title":"Lower Geography Values Provided, but No Higher Geography","slug":"lower-geography-values-provided-but-no-higher-geography","link":"#lower-geography-values-provided-but-no-higher-geography","children":[]},{"level":3,"title":"Minimum and Maximum Elevation Values Mismatched","slug":"minimum-and-maximum-elevation-values-mismatched","link":"#minimum-and-maximum-elevation-values-mismatched","children":[]},{"level":3,"title":"Mismatched Country and CountryCode Values","slug":"mismatched-country-and-countrycode-values","link":"#mismatched-country-and-countrycode-values","children":[]},{"level":3,"title":"Mismatched Geographic Terms","slug":"mismatched-geographic-terms","link":"#mismatched-geographic-terms","children":[]},{"level":3,"title":"Missing Geodetic Datum","slug":"missing-geodetic-datum","link":"#missing-geodetic-datum","children":[]},{"level":3,"title":"Missing Latitudes Longitudes","slug":"missing-latitudes-longitudes","link":"#missing-latitudes-longitudes","children":[]},{"level":3,"title":"Misspelled Geographic Unit Names","slug":"misspelled-geographic-unit-names","link":"#misspelled-geographic-unit-names","children":[]}]},{"level":2,"title":"Taxon","slug":"taxon","link":"#taxon","children":[{"level":3,"title":"Misspelled or Invalid Taxonomic Names","slug":"misspelled-or-invalid-taxonomic-names","link":"#misspelled-or-invalid-taxonomic-names","children":[]},{"level":3,"title":"Unknown Higher Taxonomy","slug":"unknown-higher-taxonomy","link":"#unknown-higher-taxonomy","children":[]}]},{"level":2,"title":"Other","slug":"other","link":"#other","children":[{"level":3,"title":"Incorrect Character Encodings","slug":"incorrect-character-encodings","link":"#incorrect-character-encodings","children":[]},{"level":3,"title":"Incorrect Line Endings","slug":"incorrect-line-endings","link":"#incorrect-line-endings","children":[]},{"level":3,"title":"Invalid Individual Count","slug":"invalid-individual-count","link":"#invalid-individual-count","children":[]},{"level":3,"title":"Nonstandardized basisOfRecord Values","slug":"nonstandardized-basisofrecord-values","link":"#nonstandardized-basisofrecord-values","children":[]}]},{"level":2,"title":"External Tools and Resources","slug":"external-tools-and-resources","link":"#external-tools-and-resources","children":[{"level":3,"title":"Footnotes","slug":"footnotes","link":"#footnotes","children":[]}]}],"git":{"updatedTime":1717095976000,"contributors":[{"name":"mjy","email":"diapriid@gmail.com","commits":2,"url":"https://github.com/mjy"},{"name":"Deborah Paul","email":"dlpaul@illinois.edu","commits":5,"url":"https://github.com/Deborah Paul"},{"name":"Debbie Paul","email":"dlpaul@illinois.edu","commits":1,"url":"https://github.com/Debbie Paul"}]},"filePathRelative":"guide/data-quality.md"}');export{d as comp,h as data};
