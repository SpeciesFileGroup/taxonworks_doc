import{_ as t,c as n,b as a,o as i}from"./app-Bn9GZJrW.js";const s={};function o(r,e){return i(),n("div",null,e[0]||(e[0]=[a(`<h1 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h1><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>These are not comprehensive instructions, at present the are intended to only trigger memory.</p></div><h2 id="production-tools" tabindex="-1"><a class="header-anchor" href="#production-tools"><span>Production tools</span></a></h2><p>The <a href="https://speciesfilegroup.org" target="_blank" rel="noopener noreferrer">SFG</a> deploys TaxonWorks using:</p><ul><li>Ansible</li><li>Docker, our images at docker are at <a href="https://hub.docker.com/r/sfgrp/taxonworks/" target="_blank" rel="noopener noreferrer">https://hub.docker.com/r/sfgrp/taxonworks/</a>.</li><li>Kubernetes</li><li>Passenger</li><li>Nginx</li><li>Ubuntu 22.x</li></ul><h2 id="cheatsheet" tabindex="-1"><a class="header-anchor" href="#cheatsheet"><span>Cheatsheet</span></a></h2><ul><li><a href="https://kubernetes.io/docs/user-guide/kubectl-cheatsheet/" target="_blank" rel="noopener noreferrer">Cheatsheet</a></li></ul><h2 id="client" tabindex="-1"><a class="header-anchor" href="#client"><span>Client</span></a></h2><ul><li><code>config</code> is typically in something like <code>~/.kube</code></li></ul><h2 id="taxonworks-configuration" tabindex="-1"><a class="header-anchor" href="#taxonworks-configuration"><span>TaxonWorks configuration</span></a></h2><ul><li>At <a href="https://github.com/SpeciesFileGroup/taxonworks/tree/development/k8s" target="_blank" rel="noopener noreferrer">/k8s</a></li></ul><h2 id="startup" tabindex="-1"><a class="header-anchor" href="#startup"><span>Startup</span></a></h2><ul><li>Apply specific settings. Files looking like <a href="https://github.com/SpeciesFileGroup/taxonworks/tree/development/k8s/dev" target="_blank" rel="noopener noreferrer">this</a>, namespace first, then <code>kubectl apply -f .</code></li><li>Apply <a href="https://github.com/SpeciesFileGroup/taxonworks/tree/development/k8s" target="_blank" rel="noopener noreferrer">application settings</a></li></ul><h2 id="frequently-used" tabindex="-1"><a class="header-anchor" href="#frequently-used"><span>Frequently used</span></a></h2><ul><li><code>kubectl get pod</code></li><li><code>kubectl apply -f .</code> (start everything, but not recursively)</li><li><code>kubectl exec -it taxonworks-####-##### bash</code></li><li><code>kubectl logs taxonworks-1122781372-5hm4z</code></li><li><code>kubectl delete -f .</code></li><li><code>kubectl get service</code> (get port for service)</li><li><code>kubectl proxy</code> (localhost:8001), then in browser: <code>http://127.0.0.1:8001/ui</code> (don&#39;t forget the /ui)</li></ul><h2 id="minikube-test-in-development" tabindex="-1"><a class="header-anchor" href="#minikube-test-in-development"><span>Minikube (test in development)</span></a></h2><ul><li>Switch context (change <code>config</code> in ~/.kube)</li><li><code>minikube ip</code> (get IP for minikube, stable, shouldn&#39;t change)</li></ul><h3 id="set-context-onetime-setup" tabindex="-1"><a class="header-anchor" href="#set-context-onetime-setup"><span>Set context/onetime setup</span></a></h3><ul><li>Create namespace for tw in minikube <code>kubectl create namespace tw</code></li><li>Set context: (run once, OS X version):</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">CONTEXT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>kubectl config view <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;/current-context/ {print $2}&#39;</span><span class="token variable">)</span></span></span>
<span class="line">kubectl config set-context <span class="token variable">$CONTEXT</span> <span class="token parameter variable">--namespace</span><span class="token operator">=</span>tw</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>Docker</span></a></h2><h3 id="rebuilding-production" tabindex="-1"><a class="header-anchor" href="#rebuilding-production"><span>Rebuilding production</span></a></h3><p>The docker build uses <code>Dockerfile</code>. Ultimately it will track the <a href="https://github.com/SpeciesFileGroup/taxonworks/tree/master" target="_blank" rel="noopener noreferrer">master branch</a>.</p><p>Containers are found at <a href="https://hub.docker.com/u/sfgrp/" target="_blank" rel="noopener noreferrer">https://hub.docker.com/u/sfgrp/</a>. At present numerically tagged versions are production, and :latest is the development snapshot.</p><ul><li><code>docker build --rm -t sfgrp/taxonworks:0.14.x .</code></li><li><code>docker push sfgrp/taxonworks:0.14.x</code></li></ul>`,25)]))}const c=t(s,[["render",o],["__file","index.html.vue"]]),p=JSON.parse('{"path":"/develop/Install/Production/Kubernetes/","title":"Overview","lang":"en-US","frontmatter":{"sidebarPosition":2,"sidebarParentPosition":2},"headers":[{"level":2,"title":"Production tools","slug":"production-tools","link":"#production-tools","children":[]},{"level":2,"title":"Cheatsheet","slug":"cheatsheet","link":"#cheatsheet","children":[]},{"level":2,"title":"Client","slug":"client","link":"#client","children":[]},{"level":2,"title":"TaxonWorks configuration","slug":"taxonworks-configuration","link":"#taxonworks-configuration","children":[]},{"level":2,"title":"Startup","slug":"startup","link":"#startup","children":[]},{"level":2,"title":"Frequently used","slug":"frequently-used","link":"#frequently-used","children":[]},{"level":2,"title":"Minikube (test in development)","slug":"minikube-test-in-development","link":"#minikube-test-in-development","children":[{"level":3,"title":"Set context/onetime setup","slug":"set-context-onetime-setup","link":"#set-context-onetime-setup","children":[]}]},{"level":2,"title":"Docker","slug":"docker","link":"#docker","children":[{"level":3,"title":"Rebuilding production","slug":"rebuilding-production","link":"#rebuilding-production","children":[]}]}],"git":{"updatedTime":1730999918000,"contributors":[{"name":"mjy","email":"diapriid@gmail.com","commits":1,"url":"https://github.com/mjy"}]},"filePathRelative":"develop/Install/Production/Kubernetes/README.md"}');export{c as comp,p as data};
