import{_ as i,c as s,a as o,d as t,e as r,f as l,r as a,o as d}from"./app-Bn9GZJrW.js";const p={};function u(m,e){const n=a("RouteLink");return d(),s("div",null,[e[8]||(e[8]=o("h1",{id:"overview",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#overview"},[o("span",null,"Overview")])],-1)),e[9]||(e[9]=o("p",null,[o("em",null,"TaxonWorks developers are committed to helping solve deployment strategies. If you need help, or want to explore alternative approaches reach out.")],-1)),e[10]||(e[10]=o("p",null,"Three approaches to deploying TaxonWorks for production (use) have been used to date:",-1)),o("ol",null,[o("li",null,[e[1]||(e[1]=t("Docker/")),r(n,{to:"/develop/Install/Production/Kubernetes/"},{default:l(()=>e[0]||(e[0]=[t("Kubernetes")])),_:1}),e[2]||(e[2]=t(" - A more advanced approach that add redundancy and ability to eliminate down-time on new deploys. The approach currently used by the ")),e[3]||(e[3]=o("a",{href:"https://speciesfilegroup.org",target:"_blank",rel:"noopener noreferrer"},"SpeciesFileGroup",-1)),e[4]||(e[4]=t("."))]),e[7]||(e[7]=o("li",null,"Docker/Local network - Running the Dockerzed version of TaxonWorks on your local network is possible and is useful when use is scoped to a smaller number of projects, or to a specific organization",-1)),o("li",null,[r(n,{to:"/develop/Install/Production/Capistranon/"},{default:l(()=>e[5]||(e[5]=[t("Capistrano")])),_:1}),e[6]||(e[6]=t(" - A deploy library used to run on standard servers, without containers. No longer maintained. Lightweight, should still be possible if you don't want to use Docker, contact us."))])])])}const f=i(p,[["render",u],["__file","index.html.vue"]]),b=JSON.parse('{"path":"/develop/Install/Production/","title":"Overview","lang":"en-US","frontmatter":{"sidebarParentPosition":3,"sidebarPosition":1},"headers":[],"git":{"updatedTime":1730999918000,"contributors":[{"name":"mjy","email":"diapriid@gmail.com","commits":1,"url":"https://github.com/mjy"}]},"filePathRelative":"develop/Install/Production/README.md"}');export{f as comp,b as data};
