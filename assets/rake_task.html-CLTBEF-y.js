import{_ as n,c as a,b as e,o as t}from"./app-Bn9GZJrW.js";const p={};function l(i,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="rake-task" tabindex="-1"><a class="header-anchor" href="#rake-task"><span>Rake task</span></a></h1><p><em>Access and/or update via scripts that utilize TaxonWork&#39;s envirnoment.</em></p><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>TODO: Integrate <a href="https://github.com/SpeciesFileGroup/taxonworks_api_scripts" target="_blank" rel="noopener noreferrer">taxonworks_api_scripts</a></p></div><p>Code here makes use of Ruby&#39;s <a href="https://ruby-doc.org/3.3.0/gems/rake/rake-13_1_0/doc/rakefile_rdoc.html" target="_blank" rel="noopener noreferrer">Rake</a> (like <code>make</code> in other languages). It loads the TaxonWorks environment so you have access to all the underlying logic and code used inside TaxonWorks.</p><h2 id="environment" tabindex="-1"><a class="header-anchor" href="#environment"><span>Environment</span></a></h2><p>Assumes:</p><ul><li>Ruby is installed</li></ul><p>Create a <code>Gemfile</code>:</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre><code><span class="line">ruby <span class="token string-literal"><span class="token string">&#39;3.3.0&#39;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Coming from TW</span></span>
<span class="line"><span class="token comment"># gem &#39;rake&#39;</span></span>
<span class="line"><span class="token comment"># gem &#39;byebug&#39;</span></span>
<span class="line"><span class="token comment"># gem &#39;rainbow&#39;</span></span>
<span class="line"></span>
<span class="line">gem <span class="token string-literal"><span class="token string">&#39;require_all&#39;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;TW_PATH&#39;</span></span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;TW_PATH&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token operator">!</span><span class="token builtin">Dir</span><span class="token punctuation">.</span>exist<span class="token operator">?</span><span class="token punctuation">(</span><span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;TW_PATH&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span> </span>
<span class="line">    puts <span class="token string-literal"><span class="token string">&quot;Can not find&quot;</span></span> <span class="token operator">+</span> <span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;TW_PATH&#39;</span></span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token keyword">else</span></span>
<span class="line">    eval_gemfile<span class="token punctuation">(</span><span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;TW_PATH&#39;</span></span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string-literal"><span class="token string">&#39;/Gemfile&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">  puts <span class="token string-literal"><span class="token string">&quot;ENV variable &#39;TW_PATH&#39; not set, do \`TW_PATH=/path/to/taxonworks &amp;&amp; export TW_PATH\`.&quot;</span></span></span>
<span class="line">  exit</span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Create a <code>Rakefile</code>:</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre><code><span class="line"><span class="token keyword">require</span> <span class="token string-literal"><span class="token string">&#39;rake&#39;</span></span></span>
<span class="line"><span class="token keyword">require</span> <span class="token string-literal"><span class="token string">&#39;byebug&#39;</span></span></span>
<span class="line"><span class="token keyword">require</span> <span class="token string-literal"><span class="token string">&#39;rainbow&#39;</span></span></span>
<span class="line"><span class="token keyword">require</span> <span class="token string-literal"><span class="token string">&#39;require_all&#39;</span></span></span>
<span class="line"></span>
<span class="line">Rake<span class="token punctuation">.</span>add_rakelib <span class="token string-literal"><span class="token string">&#39;./tasks&#39;</span></span> <span class="token comment"># Doesn&#39;t detect subdirectories?</span></span>
<span class="line"><span class="token builtin">Dir</span><span class="token punctuation">.</span>glob<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;tasks/**/*.rake&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token punctuation">{</span> <span class="token operator">|</span>r<span class="token operator">|</span> load r <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> p <span class="token operator">=</span> <span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;TW_PATH&#39;</span></span><span class="token punctuation">]</span></span>
<span class="line">  a <span class="token operator">=</span> <span class="token builtin">File</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;/config/environment&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token boolean">true</span> <span class="token comment"># Dir.exists?(a)</span></span>
<span class="line">    puts Rainbow<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;TaxonWorks found at </span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content">a</span><span class="token delimiter punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>green</span>
<span class="line">    require_relative a</span>
<span class="line">    <span class="token boolean">true</span></span>
<span class="line">  <span class="token keyword">else</span></span>
<span class="line">    puts Rainbow<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;TaxonWorks NOT found at </span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content">a</span><span class="token delimiter punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>red</span>
<span class="line">    exit</span>
<span class="line">  <span class="token keyword">end</span> </span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">  puts Rainbow<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;ENV variable &#39;TW_PATH&#39; not set, do \`TW_PATH=/path/to/taxonworks &amp;&amp; export TW_PATH\`.&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>red</span>
<span class="line">  exit </span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line">desc <span class="token string-literal"><span class="token string">&#39;default&#39;</span></span></span>
<span class="line">task <span class="token symbol">:default</span> <span class="token keyword">do</span></span>
<span class="line">  puts Rainbow<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Configuration successful.&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>purple</span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Setup</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">bundle <span class="token function">install</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Set a TW_PATH.</p><p>Temporarily (or see your OS for adding it to your PATH):</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">export TW_PATH=/path/to/taxonworks</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Test the configuration</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">rake </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If you see <code>Configuration successful</code></p><p>At this point you are able to create <a href="https://github.com/ruby/rake" target="_blank" rel="noopener noreferrer">Rake tasks</a> that access TaxonWork&#39;s environment.</p>`,20)]))}const c=n(p,[["render",l],["__file","rake_task.html.vue"]]),r=JSON.parse('{"path":"/develop/Code/Features/rake_task.html","title":"Rake task","lang":"en-US","frontmatter":{"sidebarPosition":20},"headers":[{"level":2,"title":"Environment","slug":"environment","link":"#environment","children":[]}],"git":{"updatedTime":1730999958000,"contributors":[{"name":"mjy","email":"diapriid@gmail.com","commits":1,"url":"https://github.com/mjy"}]},"filePathRelative":"develop/Code/Features/rake_task.md"}');export{c as comp,r as data};
