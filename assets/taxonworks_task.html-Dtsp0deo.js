import{_ as a,c as t,b as s,o}from"./app-Bn9GZJrW.js";const r={};function n(i,e){return o(),t("div",null,e[0]||(e[0]=[s(`<h1 id="taxonworks-task" tabindex="-1"><a class="header-anchor" href="#taxonworks-task"><span>TaxonWorks task</span></a></h1><p>You can stub all the basic code for a new task using a generator. The result of this call is a new blank card in Tasks that leads you to a new blank interface. <a href="https://github.com/SpeciesFileGroup/taxonworks/blob/development/lib/generators/taxon_works/task/USAGE.md" target="_blank" rel="noopener noreferrer">See the code base for more</a>.</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre><code><span class="line">rails generate taxon_works<span class="token symbol">:task</span> <span class="token operator">...</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>To create a Vue.js-based stub use the <code>--vue</code> flag. When using this parameter do not include method params:</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre><code><span class="line">rails generate taxon_works<span class="token symbol">:task</span> print_labels labels<span class="token operator">/</span> <span class="token operator">-</span><span class="token operator">-</span>vue</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You can use <code>-p</code> to &quot;practice&quot; running the generator (no files are written/changed).</p><p>Non-Vue.js-based tasks use the standard Rails routes/controller/views directory structure.</p><p>Vue.js app files, on the other hand, are located in <code>app/javascript/vue/tasks/</code> - for example the generator command above will create a file <code>app/javascript/vue/tasks/labels/print_labels/app.vue</code> where you can start writing your Vue app.</p><p>Another difference: while pure-Rails tasks will typically get access to controller data via html.erb files, Vue-based tasks will instead retrieve that data via ajax calls to controller actions which will return json data from json.jbuilder view files. Those data-fetching ajax routines are referred to as endpoints, e.g. Otu endpoints for retrieving Otu-related data can be found in <code>app/javascript/vue/routes/endpoints/Otu.js</code>. If you&#39;re writing a task related to a new model, one of your first tasks will likely be creating new endpoints for your model so that you can retrieve data for your task.</p><ul><li>If your task uses an id query parameter to load content related to that id, the TaxonWorks convention is to name the query parameter <code>&lt;model&gt;_id</code>. Thus the Browse Otus task, for example, uses a query parameter of the form <code>?otu_id=1</code> to browse to the Otu with id 1.</li></ul>`,10)]))}const d=a(r,[["render",n],["__file","taxonworks_task.html.vue"]]),c=JSON.parse('{"path":"/develop/Code/Features/taxonworks_task.html","title":"TaxonWorks task","lang":"en-US","frontmatter":{"sidebarPosition":100},"headers":[],"git":{"updatedTime":1748970346000,"contributors":[{"name":"Tom Klein","email":"twointofive@gmail.com","commits":1,"url":"https://github.com/Tom Klein"},{"name":"mjy","email":"diapriid@gmail.com","commits":1,"url":"https://github.com/mjy"}]},"filePathRelative":"develop/Code/Features/taxonworks_task.md"}');export{d as comp,c as data};
