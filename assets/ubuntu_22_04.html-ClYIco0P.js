import{_ as s,c as n,b as a,o as i}from"./app-Bn9GZJrW.js";const t={};function l(r,e){return i(),n("div",null,e[0]||(e[0]=[a(`<h1 id="ubuntu-22-04" tabindex="-1"><a class="header-anchor" href="#ubuntu-22-04"><span>Ubuntu 22.04</span></a></h1><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><ol><li>Assumes a clean install of the OS.</li><li>Copy and paste each line, this is not intended to run as a shell script.</li><li>Carefully read the instructions before each line before exectuting the line.</li></ol><h2 id="system-requirements-recommended" tabindex="-1"><a class="header-anchor" href="#system-requirements-recommended"><span>System Requirements (Recommended)</span></a></h2><ol><li>Memory: 8 GB RAM</li><li>Storage: 32 GB (when testing with Sandbox data)</li></ol><h2 id="installation-instructions" tabindex="-1"><a class="header-anchor" href="#installation-instructions"><span>Installation Instructions</span></a></h2><p>Open a terminal.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">sudo apt update &amp;&amp; sudo apt dist-upgrade</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Reboot the machine</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">sudo reboot</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Reopen a terminal.</p><p>Add PostgreSQL source repository for apt-get.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">sudo apt install -y postgresql-common</span>
<span class="line">sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh -y</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Install required packages.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">sudo apt-get install -y bison ca-certificates cmake curl g++ gawk git gnupg imagemagick libgdbm-dev libgeos-dev libgmp-dev libmagickwand-dev libncurses5-dev libpq-dev libproj-dev libreadline-dev libyaml-dev meld pkg-config postgresql-16 postgresql-contrib-16 postgresql-16-postgis-3 postgresql-16-postgis-3-scripts sqlite3 tesseract-ocr</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>When prompted do not supply a password. See below, the password must match <code>config/database.yml</code> if provided.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">sudo -u postgres createuser -s -d -P taxonworks_development</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Change permissions for posgresql, you are changing &#39;peer&#39; to &#39;trust&#39; for the matched line.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">sudo sed -i.bak &#39;s/local\\s*all\\s*all\\s*peer/local all all trust/&#39;  /etc/postgresql/16/main/pg_hba.conf</span>
<span class="line">sudo service postgresql restart</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Import Nodesource GPG key</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">sudo mkdir -p /etc/apt/keyrings</span>
<span class="line">curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Configure apt-get to point to newer Node packages</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">echo &quot;deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_22.x nodistro main&quot; | sudo tee /etc/apt/sources.list.d/nodesource.list</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Install Node</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">sudo apt-get update</span>
<span class="line">sudo apt-get install nodejs -y</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Install RVM</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB</span>
<span class="line"></span>
<span class="line">\\curl -sSL https://get.rvm.io | bash -s stable</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Configure your terminal to use RVM, in the menu bar of the terminal go to <code>Menu -&gt; Preferences</code>. Under <code>Profiles</code> select your default profile (clean installation should list it as <code>Unnamed</code>). Then go to <code>Command</code> tab and check <code>Run command as login shell</code>.</p><p>Close the current terminal open a new one.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">mkdir Projects</span>
<span class="line">cd Projects</span>
<span class="line">git clone https://github.com/SpeciesFileGroup/taxonworks.git</span>
<span class="line">cd taxonworks</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When you do <code>cd taxonworks</code> you will see a message regarding a particular version of Ruby. Install that version of Ruby with the command provided in the terminal. It will look something like: <code>rvm install 3.3.7</code>.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">cd . # Refreshes rvm to pick up recently installed ruby above</span>
<span class="line">gem install bundler</span>
<span class="line"></span>
<span class="line">bundle</span>
<span class="line">npm install</span>
<span class="line"></span>
<span class="line">which geckodriver | grep -q snap &amp;&amp; \\ # Apply ff.snap only if geckodriver is in snap</span>
<span class="line">cp config/application_settings.yml.ff.snap config/application_settings.yml;</span>
<span class="line">cp config/database.yml.example config/database.yml</span>
<span class="line">cp config/secrets.yml.example config/secrets.yml</span>
<span class="line"></span>
<span class="line">bundle exec rake db:create &amp;&amp; bundle exec bin/rails db:environment:set RAILS_ENV=development</span>
<span class="line"></span>
<span class="line">bundle exec rake db:schema:load &amp;&amp; bundle exec rake db:test:prepare</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Run the test suite, you may see some failures, but the vast majority should pass.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"># TMPDIR is a workaround to Firefox not being able to access /tmp due to being sandboxed by Snap</span>
<span class="line">TMPDIR=$(pwd)/tmp bundle exec rake</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>If you receive any migration related errors when you run test suite, use the following command before proceeding ahead:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">bundle exec rake db:migrate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Now proceed ahead to deploy the development server.</p><h2 id="deploy-the-development-server" tabindex="-1"><a class="header-anchor" href="#deploy-the-development-server"><span>Deploy the development server</span></a></h2><p>Before starting rails server it is recommended -but not strictly required- to start the Webpack development server first on a separate terminal so assets are rebuilt faster when developing:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">./bin/shakapacker-dev-server</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Alternatively you may run <code>bundle exec rails assets:precompile</code> (but any change you make will take longer to materialize when browsing).</p><p>Start the web server with the following command: <em>(If you followed the recommendation above then wait for assets compilation to finish before proceeding)</em></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">bundle exec rails s</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Navigate in your browser to 127.0.0.1:3000. To stop the development server return to the terminal window and type <code>ctrl-c</code>.</p><h2 id="optional" tabindex="-1"><a class="header-anchor" href="#optional"><span>Optional</span></a></h2><p>If you want to populate the development server with some dummy accounts do this:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">bundle exec rake db:seed</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The username for the dummy account is <code>user@example.com</code> and password is <code>taxonworks</code>. Note, this account is a regular user and does not have admin privileges. For admin privileges use <code>admin@example.com</code> (same password).</p><h2 id="required-for-development" tabindex="-1"><a class="header-anchor" href="#required-for-development"><span>Required for development</span></a></h2><p>If you plan on coding and committing back code you&#39;ll have had to configure git, at minimum do this</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git config --global user.name &quot;Jane Doe&quot;</span>
<span class="line">git config --global user.email developer@example.com</span>
<span class="line">git config --global merge.tool meld</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also"><span>See also</span></a></h2><ul><li><a href="https://github.com/SpeciesFileGroup/install_taxonworks/blob/master/development/native/tuning_postgres_for_development.md" target="_blank" rel="noopener noreferrer">tuning_postgres_for_development.md</a></li></ul><h2 id="troubleshooting" tabindex="-1"><a class="header-anchor" href="#troubleshooting"><span>Troubleshooting</span></a></h2><p>If you are getting the following message running <code>bundle exec rake db:create</code>:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">PG::ConnectionBad: FATAL: database &quot;taxonworks_development&quot; does not exist error.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You will have to create the database using postgresql console:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">sudo -u postgres psql</span>
<span class="line">create database taxonworks_development;</span>
<span class="line">grant all privileges on database taxonworks_development to taxonworks_development;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,58)]))}const o=s(t,[["render",l],["__file","ubuntu_22_04.html.vue"]]),p=JSON.parse('{"path":"/develop/Install/Development/Native/ubuntu_22_04.html","title":"Ubuntu 22.04","lang":"en-US","frontmatter":{"sidebarPosition":4},"headers":[{"level":2,"title":"Overview","slug":"overview","link":"#overview","children":[]},{"level":2,"title":"System Requirements (Recommended)","slug":"system-requirements-recommended","link":"#system-requirements-recommended","children":[]},{"level":2,"title":"Installation Instructions","slug":"installation-instructions","link":"#installation-instructions","children":[]},{"level":2,"title":"Deploy the development server","slug":"deploy-the-development-server","link":"#deploy-the-development-server","children":[]},{"level":2,"title":"Optional","slug":"optional","link":"#optional","children":[]},{"level":2,"title":"Required for development","slug":"required-for-development","link":"#required-for-development","children":[]},{"level":2,"title":"See also","slug":"see-also","link":"#see-also","children":[]},{"level":2,"title":"Troubleshooting","slug":"troubleshooting","link":"#troubleshooting","children":[]}],"git":{"updatedTime":1746042416000,"contributors":[{"name":"Hernán Lucas Pereira","email":"ellocodelassembler@gmail.com","commits":1,"url":"https://github.com/Hernán Lucas Pereira"},{"name":"mjy","email":"diapriid@gmail.com","commits":1,"url":"https://github.com/mjy"}]},"filePathRelative":"develop/Install/Development/Native/ubuntu_22_04.md"}');export{o as comp,p as data};
