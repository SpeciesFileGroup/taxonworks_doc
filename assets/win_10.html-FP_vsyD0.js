import{_ as r,c as o,b as a,a as n,d as e,e as l,f as t,r as d,o as p}from"./app-Bn9GZJrW.js";const c={};function u(m,s){const i=d("RouteLink");return p(),o("div",null,[s[10]||(s[10]=a(`<h1 id="windows-10-with-wsl2" tabindex="-1"><a class="header-anchor" href="#windows-10-with-wsl2"><span>Windows 10 with WSL2</span></a></h1><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p>Windows 10 now has Linux available internally via WSL2 (Windows Subsystem for Linux v2). WSL2 runs a real Linux kernel and is much faster than the first iteration, WSL1, however it is still noticeably slower than Linux installed on a &#39;bare metal&#39;.</p><p>Taxonworks can be developed using WSL2 &quot;natively&quot;. This document describes how to set everything up starting with enabling WSL2 on Windows 10.</p><p>You will NOT need Docker Desktop for this installation.</p><h2 id="preparation" tabindex="-1"><a class="header-anchor" href="#preparation"><span>Preparation</span></a></h2><p>Note: The installation procedure changes with time while WSL2 matures. This section describes installation procedure for Windows 10 October 2020 edition.</p><ul><li><p>Run all Windows updates to make sure you are at the latest Windows 10 version.</p></li><li><p>Install <code>Windows Terminal</code> (optional)</p><p>Windows Terminal is an Open Source project from Microsoft that provides a pretty nice terminal emulator. I would say the quality of it is approaching the quality of popular terminal emulators on Mac and Linux. It is highly configurabele and allows to run PowerShell, CMD, and Linux.</p><p>To install it, open <code>Windows Store</code> app and search for <code>Windows Terminal</code>.</p><p>To make Linux experience more convenient (for example starting from Linux home directory on Ubuntu, or using ligatures after installing <a href="https://github.com/tonsky/FiraCode" target="_blank" rel="noopener noreferrer">Fira Code</a>) you can modify <code>Windows Terminal</code> configuration (it is just a JSON text) similar to this <a href="../docker-win/win-term.json">example</a>.</p></li><li><p>Install <code>Visual Studio Code</code> (optional)</p><p>WSL2 does not have native support for graphical programs yet (it is planned). However Visual Studio Code, a popular code editor, supports a transparent &quot;bridge&quot; to WSL Linux. You can download it at <code>https://code.visualstudio.com/download</code></p><p><code>VS Code</code> has several useful plugins that I would recommend to install:</p><ul><li>Ruby: for Ruby language support.</li><li>Ruby Solargraph: for adding &quot;code intelligence&quot; via Language Server for Ruby -- Solargraph gem.</li><li>WSL: for (almost) transparent work with WSL2 directories.</li><li>Containers: for working with code transparently (almost) via WSL and/or SSH</li><li>Docker: simplifies interacting with docker containers (needed only if Docker Desktop is also installed)</li></ul><p>Some of these plugins are installed on windows side, some on the WSL2 side. Usually hints from <code>VS Code</code> allow to make correct decision where to install what.</p></li></ul><h2 id="install-wsl2" tabindex="-1"><a class="header-anchor" href="#install-wsl2"><span>Install WSL2</span></a></h2><p>Open PowerShell as administrator (standalone or as Windows Terminal) and type the following commands:</p><ul><li><p>Enable WSL2</p><div class="language-.bash line-numbers-mode" data-highlighter="prismjs" data-ext=".bash" data-title=".bash"><pre><code><span class="line">dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Enable Virtual Machine Platform</p><div class="language-.bash line-numbers-mode" data-highlighter="prismjs" data-ext=".bash" data-title=".bash"><pre><code><span class="line">dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Restart your computer.</p></li><li><p>Setup WSL v2 as default</p><div class="language-.bash line-numbers-mode" data-highlighter="prismjs" data-ext=".bash" data-title=".bash"><pre><code><span class="line">wsl --set-default-version 2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="wsl-troubleshooting" tabindex="-1"><a class="header-anchor" href="#wsl-troubleshooting"><span>WSL troubleshooting</span></a></h3><p>If something does not work, first open PowerShell and make sure you are running WSL v2, and now WSL v1</p><div class="language-PowerShell line-numbers-mode" data-highlighter="prismjs" data-ext="PowerShell" data-title="PowerShell"><pre><code><span class="line">wsl -l -v</span>
<span class="line"></span>
<span class="line">wsl -l -v</span>
<span class="line">  NAME                   STATE           VERSION</span>
<span class="line">* Ubuntu-20.04           Running         2</span>
<span class="line">  docker-desktop         Running         2</span>
<span class="line">  docker-desktop-data    Running         2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here the command shows that Ubuntu-20.04 is running correctly, is the default distribution (has *), and runs WSL version 2.</p><p>If you do have WSL2 installed, you will get report for every linux distribution you have if it is running correctly and what WSL version it has. If you have only WSL1 installed you will get an error message.</p><p>Removing Linux distribution can be either done usual way via uninstall GUI that Windows provides (Ubuntu distro should appear there like a &#39;normal&#39; app), or It can be done using PowerShell with <code>wslconfig</code> command</p><div class="language-PowerShell line-numbers-mode" data-highlighter="prismjs" data-ext="PowerShell" data-title="PowerShell"><pre><code><span class="line">wslconfig /l</span>
<span class="line">Windows Subsystem for Linux Distributions:</span>
<span class="line">Ubuntu-20.04 (Default)</span>
<span class="line">docker-desktop</span>
<span class="line">docker-desktop-data</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To change WSL from v1 to v2 for a distribution (for example for Ubuntu-20.04) using PowerShell</p><div class="language-PowerShell line-numbers-mode" data-highlighter="prismjs" data-ext="PowerShell" data-title="PowerShell"><pre><code><span class="line">wsl --set-version Ubuntu-20.04 2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>To remove Ubuntu-20.04 the command would be:</p><div class="language-PowerShell line-numbers-mode" data-highlighter="prismjs" data-ext="PowerShell" data-title="PowerShell"><pre><code><span class="line">wslconfig /u Ubuntu-20.04</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="install-linux-distro" tabindex="-1"><a class="header-anchor" href="#install-linux-distro"><span>Install Linux Distro</span></a></h2><p>There are several Linux distros available for WSL2, in our example we use Ubuntu 20.04.</p><p>Go to <code>Microsoft Store</code> app, search for Ubuntu, install and launch it. You will see it appearing in a separate terminal this time. You can customize it right in the terminal, or you can close it, and reopen it in <code>Windows Terminal</code>, where it will appear now as an option.</p><p>Once Ubuntu 20.04 is installed, open it in the Windows Terminal, run:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">apt</span> update</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">apt</span> dist-upgrade</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="install-postgresql-database" tabindex="-1"><a class="header-anchor" href="#install-postgresql-database"><span>Install Postgresql database</span></a></h2><p>Open Ubuntu bash in Windows Terminal</p><p>Add PostgreSQL source repository for apt-get.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;deb [arch=amd64] http://apt.postgresql.org/pub/repos/apt/ focal-pgdg main&quot;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> <span class="token parameter variable">-a</span> /etc/apt/sources.list.d/pgdg.list</span>
<span class="line"><span class="token function">wget</span> <span class="token parameter variable">--quiet</span> <span class="token parameter variable">-O</span> - https://www.postgresql.org/media/keys/ACCC4CF8.asc <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">apt-get</span> update</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Install required packages.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> postgresql-15 postgresql-contrib-15 libgeos-dev libproj-dev postgresql-15-postgis-3 postgresql-15-postgis-3-scripts libpq-dev cmake imagemagick libmagickwand-dev tesseract-ocr <span class="token function">git</span> meld <span class="token function">curl</span> libssl-dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>check postgresql version:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">psql <span class="token parameter variable">--version</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>When prompted supply the same password you will add later to <code>config/database.yml</code>.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">service</span> postgresql start</span>
<span class="line"><span class="token function">sudo</span> <span class="token parameter variable">-u</span> postgres createuser <span class="token parameter variable">-s</span> <span class="token parameter variable">-d</span> <span class="token parameter variable">-P</span> taxonworks_development</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Change permissions for posgresql, you are changing &#39;peer&#39; to &#39;trust&#39; for the matched line.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">sed</span> <span class="token parameter variable">-i.bak</span> <span class="token string">&#39;s/local\\s*all\\s*all\\s*peer/local all all trust/&#39;</span>  /etc/postgresql/15/main/pg_hba.conf</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">service</span> postgresql restart</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Now you should be able to start postgres, stop, ask for a status:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">service</span> postgresql status</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">service</span> postgresql start</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">service</span> postgresql restart</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">service</span> postgresql stop</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Import Nodesource GPG key</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">sudo mkdir -p /etc/apt/keyrings</span>
<span class="line">curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Configure apt-get to point to newer Node packages</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">echo &quot;deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_18.x nodistro main&quot; | sudo tee /etc/apt/sources.list.d/nodesource.list</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Install Node</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">sudo apt-get update</span>
<span class="line">sudo apt-get install nodejs -y</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,47)),n("p",null,[s[1]||(s[1]=e("Install virtual Ruby environment. You can follow ")),l(i,{to:"/develop/Install/Development/Native/ubuntu_20_04.html"},{default:t(()=>s[0]||(s[0]=[e("Ubuntu 20.04 instructions")])),_:1}),s[2]||(s[2]=e(" for for installing ")),s[3]||(s[3]=n("code",null,"rvm",-1)),s[4]||(s[4]=e(". Here I use an alternative ")),s[5]||(s[5]=n("code",null,"rbenv",-1)),s[6]||(s[6]=e(" package, which is more lightweight."))]),s[11]||(s[11]=a(`<h2 id="install-rbenv" tabindex="-1"><a class="header-anchor" href="#install-rbenv"><span>Install rbenv</span></a></h2><p>Rbenv, like rvm, allows to run several versions of ruby at the same time.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> clone https://github.com/sstephenson/rbenv.git ~/.rbenv</span>
<span class="line"><span class="token function">git</span> clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build</span>
<span class="line"><span class="token function">git</span> clone https://github.com/rkh/rbenv-update.git ~/.rbenv/plugins/rbenv-update</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>to <code>~/.bashrc</code> add:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$HOME</span>/.rbenv/bin:<span class="token environment constant">$PATH</span></span>
<span class="line"><span class="token builtin class-name">eval</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>rbenv init -<span class="token variable">)</span></span>&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Restart terminal. Now you should be able to install current Ruby and set it as default.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">rbenv <span class="token function">install</span> <span class="token number">2.7</span>.2</span>
<span class="line">rbenv global <span class="token number">2.7</span>.2</span>
<span class="line">gem <span class="token function">install</span> bundler</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Other useful commands</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">rbenv <span class="token builtin class-name">help</span></span>
<span class="line">rbenv <span class="token function">install</span> <span class="token parameter variable">--list</span></span>
<span class="line">rbenv versions</span>
<span class="line">rbenv upgrade</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="install-taxonworks" tabindex="-1"><a class="header-anchor" href="#install-taxonworks"><span>Install taxonworks</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mkdir</span> Projects</span>
<span class="line"><span class="token builtin class-name">cd</span> Projects</span>
<span class="line"><span class="token function">git</span> clone https://github.com/SpeciesFileGroup/taxonworks.git</span>
<span class="line"><span class="token builtin class-name">cd</span> taxonworks</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When you do <code>cd taxonworks</code> you will see a message regarding a particular version of Ruby. If it is not yet installed, install that version of Ruby with the command provided in the terminal. It will look something like: <code>rbenv install 2.7.2</code>.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">gem <span class="token function">install</span> bundler</span>
<span class="line"></span>
<span class="line">bundle</span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span></span>
<span class="line"></span>
<span class="line"><span class="token function">cp</span> config/database.yml.example config/database.yml</span>
<span class="line"><span class="token function">cp</span> config/secrets.yml.example config/secrets.yml</span>
<span class="line"></span>
<span class="line">bundle <span class="token builtin class-name">exec</span> rake db:create <span class="token operator">&amp;&amp;</span> bundle <span class="token builtin class-name">exec</span> bin/rails db:environment:set <span class="token assign-left variable">RAILS_ENV</span><span class="token operator">=</span>development</span>
<span class="line"></span>
<span class="line">bundle <span class="token builtin class-name">exec</span> rake db:schema:load <span class="token operator">&amp;&amp;</span> bundle <span class="token builtin class-name">exec</span> rake db:test:prepare</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Run the test suite, you may see some failures, but the vast majority should pass.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">bundle <span class="token builtin class-name">exec</span> rake</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,15)),n("p",null,[s[8]||(s[8]=e("If you get to this point and tests are running, you can continue with ")),l(i,{to:"/develop/Install/Development/Native/ubuntu_20_04.html"},{default:t(()=>s[7]||(s[7]=[e("Ubuntu 20.04")])),_:1}),s[9]||(s[9]=e(" documentation."))]),s[12]||(s[12]=a(`<p>To work with taxonworks code using VS Code, enter Linux terminal, go to taxonworks development directory and run:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">code <span class="token builtin class-name">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This command will open VS Code on Windows side, connected to Linux via WSL &#39;bridge&#39;.</p>`,3))])}const b=r(c,[["render",u],["__file","win_10.html.vue"]]),h=JSON.parse('{"path":"/develop/Install/Development/Native/win_10.html","title":"Windows 10 with WSL2","lang":"en-US","frontmatter":{"sidebarPosition":5},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Preparation","slug":"preparation","link":"#preparation","children":[]},{"level":2,"title":"Install WSL2","slug":"install-wsl2","link":"#install-wsl2","children":[{"level":3,"title":"WSL troubleshooting","slug":"wsl-troubleshooting","link":"#wsl-troubleshooting","children":[]}]},{"level":2,"title":"Install Linux Distro","slug":"install-linux-distro","link":"#install-linux-distro","children":[]},{"level":2,"title":"Install Postgresql database","slug":"install-postgresql-database","link":"#install-postgresql-database","children":[]},{"level":2,"title":"Install rbenv","slug":"install-rbenv","link":"#install-rbenv","children":[]},{"level":2,"title":"Install taxonworks","slug":"install-taxonworks","link":"#install-taxonworks","children":[]}],"git":{"updatedTime":1730999918000,"contributors":[{"name":"mjy","email":"diapriid@gmail.com","commits":1,"url":"https://github.com/mjy"}]},"filePathRelative":"develop/Install/Development/Native/win_10.md"}');export{b as comp,h as data};
